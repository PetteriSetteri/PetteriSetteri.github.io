{"version":3,"sources":["components/Products.js","components/productData.js","App.js","serviceWorker.js","index.js"],"names":["Products","props","useState","newName","setNewName","newAddress","setNewAddress","calcTotal","products","map","product","amount","price","reduce","a","b","calcOne1","calcOne2","calcOne3","calcOne4","calcOne5","className","i","key","width","src","image","name","desc","onClick","id","tempProducts","setProducts","addLike","class","window","location","reload","onSubmit","event","preventDefault","alert","type","value","disabled","onChange","target","productslist","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","modal","btn","span","getElementsByClassName","onclick","style","display"],"mappings":"qPAGMA,EAAU,SAACC,GAAW,IAAD,EACOC,mBAC1B,IAFmB,mBAChBC,EADgB,KACPC,EADO,OAIaF,mBAChC,IALmB,mBAIhBG,EAJgB,KAIJC,EAJI,KASjBC,EAAW,WAGb,OAFgBN,EAAMO,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,OAASD,EAAQE,SACjDC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAQ5CC,EAAU,WAGZ,OAFgBf,EAAMO,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,OAASD,EAAQE,SAExD,IAEbK,EAAU,WAGZ,OAFgBhB,EAAMO,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,OAASD,EAAQE,SAExD,IAEbM,EAAU,WAGZ,OAFgBjB,EAAMO,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,OAASD,EAAQE,SAExD,IAEbO,EAAU,WAGZ,OAFgBlB,EAAMO,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,OAASD,EAAQE,SAExD,IAEbQ,EAAU,WAGZ,OAFgBnB,EAAMO,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,OAASD,EAAQE,SAExD,IAgCnB,OACI,yBAAMS,UAAU,oBAEfpB,EAAMO,SAASC,KAAI,SAACC,EAASY,GAAV,OACpB,6BACJ,yBAAKD,UAAU,cAAcE,IAAKD,GAC9B,2BAAG,yBAAKE,MAAM,QAASC,IAAKf,EAAQgB,SACpC,oCAAUhB,EAAQiB,KAAK,8BACvB,qCAAWjB,EAAQE,MAAnB,WACA,sCAAYF,EAAQkB,MACpB,4BAAQC,QAAS,kBA/BL,SAAAC,GACZ,IAAMC,EAAe9B,EAAMO,SAASC,KAAI,SAAAC,GAIpC,OAHGA,EAAQoB,KAAOA,IACdpB,EAAO,2BAAOA,GAAP,IAAgBC,OAASD,EAAQC,OAAS,KAE9CD,KAEXT,EAAM+B,YAAYD,GAwBGE,CAAQvB,EAAQoB,MAArC,4BAA+DpB,EAAQC,aAMvE,yBAAKuB,MAAM,QACX,yCACA,4BAAQL,QA/CI,WAEZM,OAAOC,SAASC,WA6ChB,iBAAiD,6BAFjD,YAGErB,IAAW,6BAHb,YAIYC,IAAW,6BAJvB,YAKYC,IAAW,6BALvB,YAMYC,IAAW,6BANvB,WAOWC,IAAW,6BACpB,4BAAQU,GAAG,SAAX,UAIF,yBAAKA,GAAG,UAAUI,MAAM,SAGhC,yBAAKA,MAAM,iBACX,0BAAMA,MAAM,SAAZ,QAEU,yCACA,yCAEA,0BAAMI,SAjDK,SAACC,GAEdA,EAAMC,iBACNC,MAAM,mBAAqBtC,EAArB,kBAAwDE,EAAa,KAlD3DJ,EAAMO,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,UAChCE,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAiDxC,sBAA8HR,IAAc,YAgD1J,uCAEmB,2BAAOmC,KAAK,OAAOC,MAAO3B,IAAY4B,UAAQ,IAAE,6BAFnE,YAGmB,2BAAOF,KAAK,OAAOC,MAAO1B,IAAY2B,UAAQ,IAAE,6BAHnE,YAImB,2BAAOF,KAAK,OAAOC,MAAOzB,IAAY0B,UAAQ,IAAE,6BAJnE,YAKmB,2BAAOF,KAAK,OAAOC,MAAOxB,IAAYyB,UAAQ,IAAE,6BALnE,YAMmB,2BAAOF,KAAK,OAAOC,MAAOvB,IAAYwB,UAAQ,IAAE,6BAAS,6BAN5E,kBAOyB,2BAAOF,KAAK,OAAOC,MAAOpC,IAAaqC,UAAQ,IAAE,6BAAS,6BAPnF,eAQsB,2BAAOF,KAAK,OAAOC,MAAOxC,EAAS0C,SAnD1B,SAACN,GACxBnC,EAAWmC,EAAMO,OAAOH,UA0ChC,eASsB,2BAAOD,KAAK,OAAOC,MAAOtC,EAAYwC,SAvD5B,SAACN,GACzBjC,EAAciC,EAAMO,OAAOH,WAwDzB,2BAAOD,KAAK,SAASC,MAAM,cC1FtBI,EArCI,CACf,CAAIjB,GAAI,EACJJ,MAAM,wCACNC,KAAK,SACLf,MAAM,GACNgB,KAAK,iBACLjB,OAAO,GAEX,CAAImB,GAAI,EACJJ,MAAM,wCACNC,KAAK,QACLf,MAAM,GACNgB,KAAK,wBACLjB,OAAO,GAEX,CAAImB,GAAI,EACJJ,MAAM,wCACNC,KAAK,QACLf,MAAM,GACNgB,KAAK,gBACLjB,OAAO,GAEX,CAAImB,GAAI,EACJJ,MAAM,wCACNC,KAAK,QACLf,MAAM,GACNgB,KAAK,qBACLjB,OAAO,GAEX,CAAImB,GAAI,EACJJ,MAAM,wCACNC,KAAK,SACLf,MAAO,GACPgB,KAAK,gBACLjB,OAAO,ICJAqC,EAvBH,WAAO,IAAD,EAEsB9C,mBAAS6C,GAF/B,mBAEHvC,EAFG,KAEOwB,EAFP,KAMZ,OACE,yBAAKX,UAAU,OACf,4BAAQA,UAAU,cAClB,uCAEA,iCAER,kBAAC,EAAD,CAAUb,SAAUA,EAAUwB,YAAaA,OCRvBiB,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,YCrH5B,IAAIC,EAAQZ,SAASC,eAAe,WAGhCY,EAAMb,SAASC,eAAe,SAG9Ba,EAAOd,SAASe,uBAAuB,SAAS,GAGpDF,EAAIG,QAAU,WACZJ,EAAMK,MAAMC,QAAU,SAIxBJ,EAAKE,QAAU,WACbJ,EAAMK,MAAMC,QAAU,QAIxBtC,OAAOoC,QAAU,SAAShC,GACpBA,EAAMO,QAAUqB,IAClBA,EAAMK,MAAMC,QAAU,W","file":"static/js/main.6ade13bc.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nconst Products =(props) => {\r\n    const [newName, setNewName] = useState(\r\n        ''\r\n      ) \r\n    const [newAddress, setNewAddress] = useState(\r\n        ''\r\n      ) \r\n\r\n\r\n    const calcTotal =()=> {\r\n        const amounts = props.products.map(product => product.amount * product.price);\r\n        const total = amounts.reduce((a, b) => a + b, 0);\r\n        return total;\r\n    }\r\n    const calcTotalAm =()=> {\r\n        const amounts = props.products.map(product => product.amount);\r\n        const total = amounts.reduce((a, b) => a + b, 0);\r\n        return total;\r\n    }\r\n    const calcOne1 =()=> {\r\n        const amounts = props.products.map(product => product.amount * product.price);\r\n        \r\n        return amounts[0];\r\n    }\r\n    const calcOne2 =()=> {\r\n        const amounts = props.products.map(product => product.amount * product.price);\r\n        \r\n        return amounts[1];\r\n    }\r\n    const calcOne3 =()=> {\r\n        const amounts = props.products.map(product => product.amount * product.price);\r\n        \r\n        return amounts[2];\r\n    }\r\n    const calcOne4 =()=> {\r\n        const amounts = props.products.map(product => product.amount * product.price);\r\n        \r\n        return amounts[3];\r\n    }\r\n    const calcOne5 =()=> {\r\n        const amounts = props.products.map(product => product.amount * product.price);\r\n        \r\n        return amounts[4];\r\n    }\r\n\r\n    const resetAll =()=> {\r\n            \r\n        window.location.reload();\r\n\r\n        }\r\n    \r\n    \r\n    \r\n    const addLike = id => {\r\n        const tempProducts = props.products.map(product => {\r\n            if(product.id === id){\r\n                product = {...product, amount: (product.amount + 1)};\r\n            }\r\n            return product;\r\n        })\r\n        props.setProducts(tempProducts);\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();    \r\n        alert('Ostoksia tulloo ' + newName + '\\n' + 'osoitteeseen ' + newAddress + '\\n' + calcTotalAm() + ' tuottetta' + '\\n' + 'hinta: ' + calcTotal() + ' euroa');\r\n    };\r\n    const handleAddressChange = (event) => {    \r\n        setNewAddress(event.target.value);\r\n      }\r\n      const handleNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n      }\r\n\r\n    return (\r\n        <div  className=\"ProductContainer\">\r\n\r\n        {props.products.map((product, i) => \r\n        <div>\r\n    <div className=\"ProductCard\" key={i}>\r\n        <p><img width=\"200px\"  src={product.image}></img></p>\r\n        <p>Nimi: {product.name}<br></br></p>\r\n        <p>hinta: {product.price} €</p>\r\n        <p>kuvaus: {product.desc}</p>\r\n        <button onClick={()=>addLike(product.id)} > Lisää ostoskoriin {product.amount}</button>\r\n        </div>\r\n\r\n        \r\n        </div>)}\r\n        \r\n        <div class=\"cart\">\r\n        <h1>Ostoskori</h1>\r\n        <button onClick={resetAll}>poista kaikki</button><br></br>\r\ntuote 1: {calcOne1()}<br></br>\r\n          tuote 2: {calcOne2()}<br></br>\r\n          tuote 3: {calcOne3()}<br></br>\r\n          tuote 4: {calcOne4()}<br></br>\r\n          tuote 5:{calcOne5()}<br></br>\r\n          <button id=\"myBtn\">Maksa</button>\r\n    </div>\r\n    \r\n\r\n        <div id=\"myModal\" class=\"modal\">\r\n\r\n\r\n<div class=\"modal-content\">\r\n<span class=\"close\">&times;</span>\r\n\r\n          <h1>Ostoskori</h1>\r\n          <p>Tilauksesi</p>\r\n          \r\n          <form onSubmit={onSubmit}>\r\n        \r\n<p>          \r\n\r\n          tuote 1: <input type=\"text\" value={calcOne1()} disabled/><br></br>\r\n          tuote 2: <input type=\"text\" value={calcOne2()} disabled/><br></br>\r\n          tuote 3: <input type=\"text\" value={calcOne3()} disabled/><br></br>\r\n          tuote 4: <input type=\"text\" value={calcOne4()} disabled/><br></br>\r\n          tuote 5: <input type=\"text\" value={calcOne5()} disabled/><br></br><br></br>\r\n          kokonaishinta: <input type=\"text\" value={calcTotal()} disabled/><br></br><br></br>\r\n          anna nimesi <input type=\"text\" value={newName} onChange={handleNameChange}/>\r\n          anna nimesi <input type=\"text\" value={newAddress} onChange={handleAddressChange}/>\r\n          </p>\r\n          <input type=\"submit\" value=\"osta\"></input>\r\n          </form>\r\n</div>\r\n\r\n</div>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {Products};","let productslist = [\r\n    {   id: 1,\r\n        image:\"https://restcountries.eu/data/fin.svg\",\r\n        name:\"vyö\",\r\n        price:30,\r\n        desc:\"menee pälle\",\r\n        amount:0\r\n    },\r\n    {   id: 2,\r\n        image:\"https://restcountries.eu/data/fin.svg\",\r\n        name:\"hattu\",\r\n        price:25,\r\n        desc:\"menee päähän\",\r\n        amount:0\r\n    },\r\n    {   id: 3,\r\n        image:\"https://restcountries.eu/data/fin.svg\",\r\n        name:\"sukka\",\r\n        price:10,\r\n        desc:\"menee jalkaan\",\r\n        amount:0\r\n    },\r\n    {   id: 4,\r\n        image:\"https://restcountries.eu/data/fin.svg\",\r\n        name:\"paita\",\r\n        price:30,\r\n        desc:\"menee päälle\",\r\n        amount:0\r\n    },\r\n    {   id: 5,\r\n        image:\"https://restcountries.eu/data/fin.svg\",\r\n        name:\"housut\",\r\n        price: 25,\r\n        desc:\"menee jalkaan\",\r\n        amount:0\r\n    }]\r\n\r\nexport default productslist;\r\n","import React, {useState} from 'react';\r\n\r\nimport './App.css';\r\nimport {Products} from './components/Products';\r\nimport productslist from './components/productData';\r\n\r\n\r\nconst App = () => {\r\n  \r\n        const [products, setProducts] = useState(productslist)\r\n       \r\n\r\n\r\n      return (\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <h1>kauppa</h1>\r\n        </header>\r\n        <section>\r\n        \r\n<Products products={products} setProducts={setProducts}/>\r\n\r\n\r\n\r\n\r\n  </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n// Get the modal\r\nvar modal = document.getElementById(\"myModal\");\r\n\r\n// Get the button that opens the modal\r\nvar btn = document.getElementById(\"myBtn\");\r\n\r\n// Get the <span> element that closes the modal\r\nvar span = document.getElementsByClassName(\"close\")[0];\r\n\r\n// When the user clicks the button, open the modal \r\nbtn.onclick = function() {\r\n  modal.style.display = \"block\";\r\n}\r\n\r\n// When the user clicks on <span> (x), close the modal\r\nspan.onclick = function() {\r\n  modal.style.display = \"none\";\r\n}\r\n\r\n// When the user clicks anywhere outside of the modal, close it\r\nwindow.onclick = function(event) {\r\n  if (event.target == modal) {\r\n    modal.style.display = \"none\";\r\n  }\r\n}\r\n"],"sourceRoot":""}